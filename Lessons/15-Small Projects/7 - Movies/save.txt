console.log("Hi there!");

const fetchData = async (searchTerm) => {
	const response = await axios.get("http://www.omdbapi.com/", {
		params: {
			apikey: "f64a0049",
			s: searchTerm,
		},
	});

	console.log(response.data);
};

const input = document.querySelector("input");
// Typing in  input (delay for search - 2sec)
let timeoutId;
const onInput = (e) => {
	if (timeoutId) clearTimeout(timeoutId);
	timeoutId = setTimeout(() => {
		fetchData(e.target.value);
	}, 2000);
};

input.addEventListener("input", onInput);

//////////////////////////////////////////////
// Typing in  input (delay for search - 2sec)
const debounce = (func, delay) => {
	let timeoutId;
	return (...args) => {
		if (timeoutId) clearTimeout(timeoutId);
		timeoutId = setTimeout(() => {
			func.apply(null, args);
		}, delay * 1000);
	};
};
/////////////////////////
"use strict";

const fetchData = async (searchTerm) => {
	const response = await axios.get("http://www.omdbapi.com/", {
		params: {
			apikey: "f64a0049",
			s: searchTerm,
		},
	});
	// If not found movie by name or else
	if (response.data.Error) return [];
	return response.data.Search;
};

const root = document.querySelector(".autocomplete");
root.innerHTML = `
    <label><b>Search</b></label>
    <input class="input" />
    <div class="dropdown">
      <div class="dropdown-menu">
        <div class="dropdown-content results"></div>
      </div>
    </div>
  `;

const input = document.querySelector("input");
const dropdown = document.querySelector(".dropdown");
const resultsWrapper = document.querySelector(".results");

const onInput = async (e) => {
	const movies = await fetchData(e.target.value);

	if (!movies.length) {
		dropdown.classList.remove("is-active");
		return;
	}
	resultsWrapper.innerHTML = "";
	dropdown.classList.add("is-active");
	for (let movie of movies) {
		const option = document.createElement("a");
		const imgSrc = movie.Poster === "N/A" ? "" : movie.Poster;

		option.classList.add("dropdow-item");
		option.innerHTML = `
		<img src="${imgSrc}" alt="${movie.Title}"/>
		${movie.Title}
		`;
		option.addEventListener("click", () => {
			dropdown.classList.remove("is-active");
			input.value = movie.Title;

			onMovieSelect(movie);
		});

		resultsWrapper.appendChild(option);
	}
};
input.addEventListener("input", debounce(onInput, 2));

document.addEventListener("click", (e) => {
	if (!root.contains(e.target)) dropdown.classList.remove("is-active");
});

const onMovieSelect = async (movie) => {
	const response = await axios.get("http://www.omdbapi.com/", {
		params: {
			apikey: "f64a0049",
			i: movie.imdbID,
		},
	});
	document.querySelector(`#summary`).innerHTML = movieTemplate(response.data);
};

const movieTemplate = (movieDetail) => {
	return `
	<article class="media">
		<figure class="media-left">
			<p class="image">
				<img src="${movieDetail.Poster}"
			</p>
		</figure>
		<div class="media-content">
			<h1>${movieDetail.Title}</h1>
			<h4>${movieDetail.Genre}</h4>
			<p>${movieDetail.Plot}</p>
		</div>
	</article>
	<article class="notification is-primary">
		<p class="title">${movieDetail.Awards}</p>
		<p class="subtitle">Awards</p>
	</article>
	<article class="notification is-primary">
		<p class="title">${movieDetail.BoxOffice}</p>
		<p class="subtitle">Box Office</p>
	</article>
	<article class="notification is-primary">
		<p class="title">${movieDetail.Metascore}</p>
		<p class="subtitle">Metascore</p>
	</article>
	<article class="notification is-primary">
		<p class="title">${movieDetail.imdbRating}</p>
		<p class="subtitle">IMDB Rating</p>
	</article>
	<article class="notification is-primary">
		<p class="title">${movieDetail.imdbVotes}</p>
		<p class="subtitle">IMDB Votes</p>
	</article>
	`;
};

//////////////////////////////////////////////
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>Movie Fight</title>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.0/axios.min.js"></script>
		<link
			rel="stylesheet"
			href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/css/all.css"
		/>
		<link
			rel="stylesheet"
			href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.5/css/bulma.css"
		/>
		<link rel="stylesheet" href="style.css" />
	</head>

	<body>
		<section class="hero is-primary is-bold">
			<div class="hero-body">
				<div class="container">
					<h1 class="title">
						Movie Fight
						<span class="icon">
							<i class="fas fa-film"></i>
						</span>
					</h1>
				</div>
			</div>
		</section>
		<div class="container">
			<div class="columns">
				<div class="column">
					<div id="left-autocomplete"></div>
					<div id="left-summary"></div>
				</div>

				<div class="column">
					<div id="right-autocomplete"></div>
					<div id="right-summary"></div>
				</div>
			</div>

			<div class="column is-half notification is-primary tutorial">
				<h1 class="title">Search For a Movie on Both Sides</h1>
				<p class="subtitle">We will tell you which is best!</p>
			</div>
		</div>
		<script src="utils.js"></script>
		<script src="autocomplete.js"></script>
		<script src="index.js"></script>
	</body>
</html>
//////////////////////////////////////////////